# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Kursach.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
# pyuic5 -x <*.ui> -o <*.py>

from PyQt5 import QtCore, QtGui, QtWidgets
import pyqtgraph
from pyqtgraph import PlotWidget
import sys
from Interpolation import Interpolation
from Point import Point
import numpy as np


class Ui_MainWindow(object):
    test_points = [(0.0, 1.0), (0.2, 1.02), (0.4, 1.08), (0.6, 1.12),
                   (0.8, 1.34), (1.0, 1.54), (1.2, 1.81), (1.4, 2.15)]

    interpolation_ins = Interpolation()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(816, 480)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(10, 10, 121, 151))
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setWordWrap(True)
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label)
        self.editAppendX = QtWidgets.QLineEdit(self.groupBox)
        self.editAppendX.setAlignment(QtCore.Qt.AlignCenter)
        self.editAppendX.setObjectName("editAppendX")
        self.verticalLayout_2.addWidget(self.editAppendX)
        self.editAppendY = QtWidgets.QLineEdit(self.groupBox)
        self.editAppendY.setAlignment(QtCore.Qt.AlignCenter)
        self.editAppendY.setObjectName("editAppendY")
        self.verticalLayout_2.addWidget(self.editAppendY)
        self.appendPointBtn = QtWidgets.QPushButton(self.groupBox)
        self.appendPointBtn.setObjectName("appendPointBtn")
        self.appendPointBtn.clicked.connect(self.appendPointBtn_clicked)
        self.verticalLayout_2.addWidget(self.appendPointBtn)
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(10, 230, 121, 131))
        self.groupBox_2.setTitle("")
        self.groupBox_2.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignTop)
        self.groupBox_2.setObjectName("groupBox_2")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupBox_2)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_2 = QtWidgets.QLabel(self.groupBox_2)
        self.label_2.setWordWrap(True)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.editFindX = QtWidgets.QLineEdit(self.groupBox_2)
        self.editFindX.setAlignment(QtCore.Qt.AlignCenter)
        self.editFindX.setObjectName("editFindX")
        self.verticalLayout.addWidget(self.editFindX)
        self.interpolateBtn = QtWidgets.QPushButton(self.groupBox_2)
        self.interpolateBtn.setObjectName("interpolateBtn")
        self.interpolateBtn.clicked.connect(self.interpolateBtn_clicked)
        self.verticalLayout.addWidget(self.interpolateBtn)
        # chart
        self.graphicsView = PlotWidget(self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(170, 10, 621, 430))
        self.graphicsView.setObjectName("graphicsView")
        self.graphicsView0 = PlotWidget(self.centralwidget)
        self.graphicsView0.setGeometry(QtCore.QRect(170, 10, 621, 430))
        self.graphicsView0.setObjectName("graphicsView0")
        self.graphicsView0.hide()
        # Aitken table
        self.aitkenTable = QtWidgets.QTableWidget(self.centralwidget)
        self.aitkenTable.setGeometry(QtCore.QRect(170, 10, 621, 430))
        self.aitkenTable.setObjectName("aitkenTable")
        self.aitkenTable.setColumnCount(self.interpolation_ins.get_width()+3)
        header = self.aitkenTable.horizontalHeader()
        header.setResizeMode(0, QtWidgets.QHeaderView.ResizeToContents)
        self.aitkenTable.hide()
        # Lagrangian polynomial
        self.lagrangianTextBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.lagrangianTextBrowser.setGeometry(QtCore.QRect(170, 10, 621, 430))
        self.lagrangianTextBrowser.setObjectName("lagrangianTextBrowser")
        self.lagrangianTextBrowser.hide()

        self.clearPointsBtn = QtWidgets.QPushButton(self.centralwidget)
        self.clearPointsBtn.setGeometry(QtCore.QRect(10, 180, 121, 32))
        self.clearPointsBtn.setObjectName("clearPointsBtn")
        self.clearPointsBtn.clicked.connect(self.clear_points)
        self.labelY = QtWidgets.QLabel(self.centralwidget)
        self.labelY.setGeometry(QtCore.QRect(15, 370, 130, 31))
        self.labelY.setObjectName("labelY")
        self.labelY0 = QtWidgets.QLabel(self.centralwidget)
        self.labelY0.setGeometry(QtCore.QRect(15, 390, 130, 31))
        self.labelY0.setObjectName("labelY0")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(5, 420, 151, 26))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItems(
            ["Lagrangian Graph", "Aitken Graph", "Aitken Table", "Lagrangian Polynomial"])
        self.comboBox.activated.connect(self.select_view)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 816, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Append point to graph"))
        self.editAppendY.setPlaceholderText(_translate("MainWindow", "Y"))
        self.editAppendX.setPlaceholderText(_translate("MainWindow", "X"))
        self.appendPointBtn.setText(_translate("MainWindow", "Add Point"))
        self.label_2.setText(_translate(
            "MainWindow", "Find Y for point with X coordinate"))
        self.labelY.setText(_translate("MainWindow", "Aitken Y: "))
        self.labelY0.setText(_translate("MainWindow", "Lgrngn Y: "))
        self.editFindX.setPlaceholderText(_translate("MainWindow", "X"))
        self.interpolateBtn.setText(_translate("MainWindow", "Interpolate"))
        self.clearPointsBtn.setText(_translate("MainWindow", "Clear Points"))
        self.comboBox.setItemText(0, _translate(
            "MainWindow", "Lagrangian Graph"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Aitken Graph"))
        self.comboBox.setItemText(2, _translate(
            "MainWindow", "Aitken Table"))
        self.comboBox.setItemText(3, _translate(
            "MainWindow", "Lagrangian Polynomial"))

    def clear_points(self):
        self.graphicsView.clear()
        self.graphicsView0.clear()
        self.interpolation_ins.clear_points()
        self.aitkenTable.clear()
        self.lagrangianTextBrowser.clear()

    def select_view(self, i):
        print(i)
        self.comboBox.setCurrentIndex(i)
        if i == 0:
            self.graphicsView.show()
            self.graphicsView0.hide()
            self.aitkenTable.hide()
            self.lagrangianTextBrowser.hide()
        elif i == 1:
            self.graphicsView.hide()
            self.graphicsView0.show()
            self.aitkenTable.hide()
            self.lagrangianTextBrowser.hide()
        elif i == 2:
            self.graphicsView.hide()
            self.graphicsView0.hide()
            self.aitkenTable.show()
            self.lagrangianTextBrowser.hide()
        elif i == 3:
            self.graphicsView.hide()
            self.graphicsView0.hide()
            self.aitkenTable.hide()
            self.lagrangianTextBrowser.show()

    def update_Aitken(self, points):
        self.aitkenTable.setRowCount(len(points))
        for i in range(len(points)):
            for j in range(len(points[0])):
                self.aitkenTable.setItem(
                    i, j, QtWidgets.QTableWidgetItem(str(points[i][j])))

    def update_Lagrangian(self):
        if not self.interpolation_ins.lagrangian:
            self.interpolation_ins.build_Lagrangian()
        self.lagrangianTextBrowser.clear()
        for i in self.interpolation_ins.lagrangian:
            self.lagrangianTextBrowser.append(i)
            self.lagrangianTextBrowser.append("\n")

    def add_default_points(self):
        if not len(self.interpolation_ins.get_points()):
            for (x, y) in self.test_points:
                p = Point(x, y)
                self.interpolation_ins.add_point(p)

    def appendPointBtn_clicked(self):
        try:
            x = float(self.editAppendX.text())
            y = float(self.editAppendY.text())
            p = Point(x, y)
        except Exception as e:
            print("-" * 50 + "\n", e)
            self.add_default_points()
        else:
            self.interpolation_ins.add_point(p)
        points = self.interpolation_ins.get_points()
        self.update_Lagrangian()
        self.update_Aitken(self.interpolation_ins.init_Aitken())
        self.editAppendX.setText("")
        self.editAppendY.setText("")
        massiv_x = self.scatter()
        self.small_interval_lagrangian(massiv_x)
        self.small_interval_Aitken(massiv_x)

    def scatter(self, step=0.01):
        points = self.interpolation_ins.get_points()
        start, end = points[0].get_x(), points[-1].get_x()
        massiv_x = np.arange(start, end, step)
        return massiv_x

    def small_interval_lagrangian(self, massiv_x):
        massiv_y = []
        for x in massiv_x:
            self.interpolation_ins.set_interpolation_point_x(x)
            y = self.interpolation_ins.Lagrangian_method()
            massiv_y.append(y)
        self.graphicsView.clear()
        self.graphicsView.plot(massiv_x, massiv_y)

    def small_interval_Aitken(self, massiv_x):
        massiv_y = []
        xs, ys = self.interpolation_ins.get_split_points()
        for x in massiv_x:
            y = self.interpolation_ins.method(x, xs, ys)
            massiv_y.append(y)
        self.graphicsView0.clear()
        self.graphicsView0.plot(
            massiv_x, massiv_y, pen=pyqtgraph.mkPen('g'))

    def interpolateBtn_clicked(self):
        try:
            x = float(self.editFindX.text())
        except Exception as e:
            print("Exception: ", e)
            return
        if not self.interpolation_ins.get_points():
            print("No points for interpolation")
        else:
            self.select_view(0)
            self.interpolation_ins.set_interpolation_point_x(x)
            xs, ys = self.interpolation_ins.get_split_points()
            y_E = self.interpolation_ins.method(x, xs, ys)
            y = self.interpolation_ins.test()
            y_L = self.interpolation_ins.Lagrangian_method()
            text = "Aitken Y: " + str(y_E)
            self.labelY.setText(text)
            text = "Lagrangian Y: " + str(y_L)
            self.labelY0.setText(text)
            if self.interpolation_ins.is_in_interval(x):
                self.update_Aitken(
                    self.interpolation_ins.get_table())
                self.graphicsView.plot(
                    [x], [y_E], pen=None, symbol='o')
                self.graphicsView0.plot(
                    [x], [y_L], pen=pyqtgraph.mkPen('r'), symbol='o')


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
